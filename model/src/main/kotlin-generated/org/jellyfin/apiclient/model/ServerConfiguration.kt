// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
package org.jellyfin.apiclient.model

import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.collections.List

/**
 * Represents the server configuration.
 */
data class ServerConfiguration(
	/**
	 * Gets or sets a value indicating whether to enable automatic port forwarding.
	 */
	val enableUPnP: Boolean,
	/**
	 * Gets or sets a value indicating whether to enable prometheus metrics exporting.
	 */
	val enableMetrics: Boolean,
	/**
	 * Gets or sets the public mapped port.
	 */
	val publicPort: Int,
	/**
	 * Gets or sets the public HTTPS port.
	 */
	val publicHttpsPort: Int,
	/**
	 * Gets or sets the HTTP server port number.
	 */
	val httpServerPortNumber: Int,
	/**
	 * Gets or sets the HTTPS server port number.
	 */
	val httpsPortNumber: Int,
	/**
	 * Gets or sets a value indicating whether to use HTTPS.
	 */
	val enableHttps: Boolean,
	val enableNormalizedItemByNameIds: Boolean,
	/**
	 * Gets or sets the filesystem path of an X.509 certificate to use for SSL.
	 */
	val certificatePath: String? = null,
	/**
	 * Gets or sets the password required to access the X.509 certificate data in the file specified by
	 * MediaBrowser.Model.Configuration.ServerConfiguration.CertificatePath.
	 */
	val certificatePassword: String? = null,
	/**
	 * Gets or sets a value indicating whether this instance is port authorized.
	 */
	val isPortAuthorized: Boolean,
	/**
	 * Gets or sets if quick connect is available for use on this server.
	 */
	val quickConnectAvailable: Boolean,
	val autoRunWebApp: Boolean,
	val enableRemoteAccess: Boolean,
	/**
	 * Gets or sets a value indicating whether [enable case sensitive item ids].
	 */
	val enableCaseSensitiveItemIds: Boolean,
	val disableLiveTvChannelUserDataName: Boolean,
	/**
	 * Gets or sets the metadata path.
	 */
	val metadataPath: String? = null,
	val metadataNetworkPath: String? = null,
	/**
	 * Gets or sets the preferred metadata language.
	 */
	val preferredMetadataLanguage: String? = null,
	/**
	 * Gets or sets the metadata country code.
	 */
	val metadataCountryCode: String? = null,
	/**
	 * Characters to be replaced with a ' ' in strings to create a sort name.
	 */
	val sortReplaceCharacters: List<String>? = null,
	/**
	 * Characters to be removed from strings to create a sort name.
	 */
	val sortRemoveCharacters: List<String>? = null,
	/**
	 * Words to be removed from strings to create a sort name.
	 */
	val sortRemoveWords: List<String>? = null,
	/**
	 * Gets or sets the minimum percentage of an item that must be played in order for playstate to be
	 * updated.
	 */
	val minResumePct: Int,
	/**
	 * Gets or sets the maximum percentage of an item that can be played while still saving playstate.
	 * If this percentage is crossed playstate will be reset to the beginning and the item will be marked
	 * watched.
	 */
	val maxResumePct: Int,
	/**
	 * Gets or sets the minimum duration that an item must have in order to be eligible for playstate
	 * updates..
	 */
	val minResumeDurationSeconds: Int,
	/**
	 * The delay in seconds that we will wait after a file system change to try and discover what has
	 * been added/removed
	 * Some delay is necessary with some items because their creation is not atomic.  It involves the
	 * creation of several
	 * different directories and files.
	 */
	val libraryMonitorDelay: Int,
	/**
	 * Gets or sets a value indicating whether [enable dashboard response caching].
	 * Allows potential contributors without visual studio to modify production dashboard code and test
	 * changes.
	 */
	val enableDashboardResponseCaching: Boolean,
	val imageSavingConvention: ImageSavingConvention,
	val metadataOptions: List<MetadataOptions>? = null,
	val skipDeserializationForBasicTypes: Boolean,
	val serverName: String? = null,
	val baseUrl: String? = null,
	val uiCulture: String? = null,
	val saveMetadataHidden: Boolean,
	val contentTypes: List<NameValuePair>? = null,
	val remoteClientBitrateLimit: Int,
	val enableFolderView: Boolean,
	val enableGroupingIntoCollections: Boolean,
	val displaySpecialsWithinSeasons: Boolean,
	val localNetworkSubnets: List<String>? = null,
	val localNetworkAddresses: List<String>? = null,
	val codecsUsed: List<String>? = null,
	val pluginRepositories: List<RepositoryInfo>? = null,
	val ignoreVirtualInterfaces: Boolean,
	val enableExternalContentInSuggestions: Boolean,
	/**
	 * Gets or sets a value indicating whether the server should force connections over HTTPS.
	 */
	val requireHttps: Boolean,
	val enableNewOmdbSupport: Boolean,
	val remoteIpFilter: List<String>? = null,
	val isRemoteIpFilterBlacklist: Boolean,
	val imageExtractionTimeoutMs: Int,
	val pathSubstitutions: List<PathSubstitution>? = null,
	val enableSimpleArtistDetection: Boolean,
	val uninstalledPlugins: List<String>? = null,
	/**
	 * Gets or sets a value indicating whether slow server responses should be logged as a warning.
	 */
	val enableSlowResponseWarning: Boolean,
	/**
	 * Gets or sets the threshold for the slow response time warning in ms.
	 */
	val slowResponseThresholdMs: Long,
	/**
	 * Gets or sets the cors hosts.
	 */
	val corsHosts: List<String>? = null,
	/**
	 * Gets or sets the number of days we should retain log files.
	 */
	val logFileRetentionDays: Int,
	/**
	 * Gets or sets a value indicating whether this instance is first run.
	 */
	val isStartupWizardCompleted: Boolean,
	/**
	 * Gets or sets the cache path.
	 */
	val cachePath: String? = null,
	val previousVersion: Version,
	/**
	 * Gets or sets the stringified PreviousVersion to be stored/loaded,
	 * because System.Version itself isn't xml-serializable.
	 */
	val previousVersionStr: String? = null
)
