variables:
  - group: 'jellyfin'

trigger:
  batch: true
  branches:
    include:
      - master
      - release*
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - '*'

jobs:
  - job: Test
    displayName: 'Test'

    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: Gradle@2
        displayName: 'Run Tests'
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: 1.11
          sonarQubeRunAnalysis: false

  - job: Build
    displayName: 'Build'

    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: Gradle@2
        displayName: 'Build'
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'distZip'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: 1.11
          sonarQubeRunAnalysis: false

  - job: Publish
    displayName: 'Publish'

    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags')

    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - script: echo "##vso[task.setvariable variable=JELLYFIN_VERSION]$( awk -F '/' '{ print $NF }' <<<'$(Build.SourceBranch)' | sed 's/^v//' )"
        displayName: 'Set Version Variable'

      - task: Gradle@2
        displayName: 'Build, Distribute & Publish'
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'publish distZip'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: 1.11
          sonarQubeRunAnalysis: false
        env:
          BINTRAY_KEY: $(bintray_key)

      - task: CopyFiles@2
        displayName: 'Copy build assets'
        inputs:
          Contents: |
            **/distributions/*-$(JELLYFIN_VERSION).zip
            **/libs/*-$(JELLYFIN_VERSION).jar
            **/libs/*-$(JELLYFIN_VERSION)-sources.jar
            **/outputs/aar/*.aar
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          flattenFolders: true

      - task: GitHubRelease@1
        displayName: 'GitHub Upload'
        inputs:
          gitHubConnection: Jellyfin Release Download
          repositoryName: jellyfin/jellyfin-apiclient-java
          action: 'edit'
          assetUploadMode: 'replace'
          tag: 'v$(JELLYFIN_VERSION)'
