// !!        WARNING
// !! DO NOT EDIT THIS FILE
//
// This file is generated by the openapi-generator module and is not meant for manual changes.
// Please read the README.md file in the openapi-generator module for additional information.
package org.jellyfin.apiclient.api.operations

import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import org.jellyfin.apiclient.api.client.KtorClient
import org.jellyfin.apiclient.api.client.Response
import org.jellyfin.apiclient.model.EndPointInfo
import org.jellyfin.apiclient.model.LogFile
import org.jellyfin.apiclient.model.PublicSystemInfo
import org.jellyfin.apiclient.model.SystemInfo
import org.jellyfin.apiclient.model.WakeOnLanInfo

class SystemApi(
	private val api: KtorClient
) {
	/**
	 * Gets information about the request endpoint.
	 */
	suspend fun getEndpointInfo(): Response<EndPointInfo> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.get<EndPointInfo>("/System/Endpoint", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Gets information about the server.
	 */
	suspend fun getSystemInfo(): Response<SystemInfo> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.get<SystemInfo>("/System/Info", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Gets public information about the server.
	 */
	suspend fun getPublicSystemInfo(): Response<PublicSystemInfo> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.get<PublicSystemInfo>("/System/Info/Public", pathParameters, queryParameters,
				data)
		return response
	}

	/**
	 * Gets a list of available server log files.
	 */
	suspend fun getServerLogs(): Response<List<LogFile>> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.get<List<LogFile>>("/System/Logs", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Gets a log file.
	 *
	 * @param name The name of the log file to get.
	 */
	suspend fun getLogFile(name: String): Response<String> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = mutableMapOf<String, Any?>()
		queryParameters["name"] = name
		val data = null
		val response = api.get<String>("/System/Logs/Log", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Pings the system.
	 */
	suspend fun getPingSystem(): Response<String> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.get<String>("/System/Ping", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Pings the system.
	 */
	suspend fun postPingSystem(): Response<String> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.post<String>("/System/Ping", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Restarts the application.
	 */
	suspend fun restartApplication(): Response<Unit> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.post<Unit>("/System/Restart", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Shuts down the application.
	 */
	suspend fun shutdownApplication(): Response<Unit> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.post<Unit>("/System/Shutdown", pathParameters, queryParameters, data)
		return response
	}

	/**
	 * Gets wake on lan information.
	 */
	suspend fun getWakeOnLanInfo(): Response<List<WakeOnLanInfo>> {
		val pathParameters = emptyMap<String, Any?>()
		val queryParameters = emptyMap<String, Any?>()
		val data = null
		val response = api.get<List<WakeOnLanInfo>>("/System/WakeOnLanInfo", pathParameters,
				queryParameters, data)
		return response
	}
}
